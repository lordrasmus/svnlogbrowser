{"name":"svnLogBrowser","tagline":"Web-based frontend for browsing SVN commit logs.","body":"# svnLogBrowser\r\n\r\n**This project has been retired, use at your own risk!**\r\n\r\nsvnLogBrowser provides a web-based frontend for browsing through commit logs\r\nfrom any Subversion repository, and is released under the [GNU GPL][gpl]. It\r\ngives developers a tool for quickly locating changes, reviewing peer\r\ndeveloper's commits, or just a general overview of what recent changes have\r\nbeen made to a project.\r\n\r\n[gpl]: http://svn.svnlogbrowser.org/trunk/LICENSE\r\n\r\n\r\n## Features\r\n\r\n- Quick, fulltext searches on changed paths or logs of all commits.\r\n- Ability to syndicate only specific SVN paths, not just whole repositories.\r\n- Identifies configured trunk, tag, or branch commits.\r\n- Visitors can browse and search through individual developers' commits.\r\n- Automatic links to path logs and file diffs. (only ViewVC is currently\r\n  supported, more to follow soon)\r\n- Automatic direct links to changed SVN files/paths. (only when using \r\n  `http[s]://` Subversion URLs)\r\n- Customizable display names for developers.\r\n- Commit counts for each developer.\r\n- Optimized interface only shows active developers by default.\r\n- Supports multiple changelogs in single installation.\r\n- Stores current view settings in URL for linking to peers.\r\n- Large commits can be hidden by default. (optimized with AJAX)\r\n- Easy to use web installation and configuration script.\r\n\r\n\r\n## Live Demos\r\n\r\n[Subversion SVN Changelog][svnlog] - A changelog of all commits to the\r\n[Subversion](http://subversion.tigris.org/) repository. The svnLogBrowser\r\nchangelog is also hosted here.\r\n\r\n[wxWidgets SVN Changelog][wxlog] - This changelog shows off the power of these\r\nscripts on one of the largest open source SVN repositories (with about 50,000\r\nrevisions).\r\n\r\n[svnlog]: http://demo.svnlogbrowser.org/\r\n[wxlog]: http://wx.ibaku.net/changelog/\r\n\r\n\r\n## Requirements\r\n\r\n- Webserver with PHP 4.3 or later\r\n- MySQL 4.1 or later (untested on 4.0)\r\n- Python 2.4 or later\r\n- Python Modules: [MySQLdb][mysqldb], [pysvn][pysvn]\r\n\r\n[mysqldb]: http://sourceforge.net/projects/mysql-python/\r\n[pysvn]: http://pysvn.tigris.org/\r\n\r\n\r\n## Quick Start\r\n\r\n1. Setup a new MySQL database and user with access to that database.\r\n2. Edit the `slb-update.py` script, and configure the database credentials.\r\n3. Move the `frontend` folder to the location on your website you would like\r\n   users to access the logs.\r\n4. In your frontend folder, move `config.php.dist` to `config.php`, and edit\r\n   `config.php`, adding in the database credentials. (this is done once for\r\n   the update script, and once for the web frontend)\r\n5. Point your browser at `http://example.com/path/to/slb/setup.php` to\r\n   configure svnLogBrowser. See the \"Configuration\" section for details on\r\n   settings.\r\n6. Run `slb-update.py` to make the first update. Keep in mind that this can\r\n   take a long time for large repositories, be patient.\r\n    * `$ python slb-update.py`\r\n7. Go back to the `setup.php` page, and add any developer's names you wish to\r\n   display, then lock out access to the `setup.php` page. The page may require\r\n   the password to edit anything, but it is not secure.\r\n    * `$ chmod 000 setup.php`\r\n8. Edit your crontab, and add the `slb-update.py` script to run however often\r\n   you want it to update your changelogs.\r\n\r\n\r\n## Introduction\r\n\r\nThere are two individual parts of svnLogBrowser that need to work together to\r\nbring users the latest changes. The first is the frontend which consists of\r\nall the PHP scripts for browsing changes, and changing settings. The second is\r\nthe Python `slb-update.py` script, which is built to run periodically from\r\ncron which reads the latest commits from the SVN repository, and adds them to\r\nthe database for quick retrieval and searching.\r\n\r\nThe scripts are written in a way that it's possible to configure a secondary\r\nserver to do the updates so the web frontend only requires MySQL and PHP, but\r\nit is more efficient to run the update script on the same server as MySQL.\r\n\r\nOnce the first update has been made, subsequent updates will only retrieve\r\nlogs for new commits. So after you've made the first pass, updates will\r\nusually only take a few seconds. If you don't like the interval of time when\r\ncommits have been made, but aren't shown in the frontend, you could even add\r\nthe update script into the commit hooks for the SVN repository if you have the\r\nappropriate access. (instructions not given)\r\n\r\n\r\n## Configuration\r\n\r\nThis section outlines what each of the changelog settings are for.\r\n\r\nName: This is the displayed name for the changelog, simple enough.\r\n\r\n**Table Prefix**: Each of your changelogs use individual tables in the\r\ndatabase to ease the stress of searches and administration. The name of the\r\ntables used will be prefixed with this setting. These must be unique between\r\nchangelogs.\r\n\r\n**SVN URL**: This should be the URL to the SVN repository you want to watch\r\nlogs from. You can use any of the standard URI that Subversion supports. Any\r\nof `svn://`, `http://`, and `https://` will work. If you use a HTTP based URL,\r\nsvnLogBrowser will automatically link to the files in the browser so users can\r\ntake a look at the whole file in question.\r\n\r\n**Summary Limit**: If any one commit contains more than the given number of\r\nchanges here, then they will be hidden from the user by default with a link\r\nthe user must click to see them. This is overridden if the user has turned off\r\nfile summarizing. This functionality helps prevent PHP memory limit problems\r\nand also speeds up page load times significantly for some requests since the\r\nchanges aren't actually generated, sent to the browser, and rendered until the\r\nuser clicks the link. 10 changes is a good default setting for most.\r\n\r\n**Trunk, Tags, and Branches**: (Optional) For svnLogBrowser to identify, mark,\r\nand shorten the display of changed paths, it needs to be told where each of\r\nthese folders are located relative to the repository root. In traditional\r\nrepositories, these will simply be `/trunk`, `/tags`, and `/branches`\r\nrespectively. Please note the missing trailing slash, this is important.\r\n\r\n**Diff URL**: (Optional) If you have ViewVC setup for your repository, you can\r\nadd the URL to your top ViewVC page for the repository and svnLogBrowser will\r\nautomatically link changes to their diffs and path logs in ViewVC. For\r\nExample, if your repository was `MyProject`, you would set this to something\r\nlike this: `http://www.myproject.com/viewvc/MyProject` (no trailing slash)\r\n","google":"UA-13054714-4","note":"Don't delete this file! It's used internally to help with page regeneration."}